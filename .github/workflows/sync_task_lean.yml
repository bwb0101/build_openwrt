#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Sync task for lean[schedule]

on:
  #repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    # local 0点
    - cron: 0 16 */3 * *

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        date=$(date +%Y%m%d%H%M%S)
        echo "DATE=$date" >> $GITHUB_ENV
        sudo -E apt-get -qq install jq

    - name: Sync my packages
      run: |
        mkdir mypkg
        git clone https://github.com/coolsnowwolf/packages.git mypkg/pkg
        git clone https://github.com/coolsnowwolf/luci.git mypkg/luci
        git clone https://github.com/kenzok8/openwrt-packages.git kenzok8
        git clone https://github.com/kenzok8/small-package.git kenzok8-new
        rm -rf mypkg/pkg/.git*
        rm -rf mypkg/luci/.git*

        rm -rf mypkg/pkg/net/smartdns
        rm -rf mypkg/luci/applications/luci-app-smartdns
        cp -r kenzok8/smartdns mypkg/pkg/net
        cp -r kenzok8/luci-app-smartdns mypkg/luci/applications
        rm -rf mypkg/pkg/net/mosdns
        rm -rf mypkg/luci/applications/luci-app-mosdns
        cp -r kenzok8/mosdns mypkg/pkg/net
        cp -r kenzok8/luci-app-mosdns mypkg/luci/applications

        rm -rf mypkg/pkg/multimedia/aliyundrive-fuse
        rm -rf mypkg/luci/applications/luci-app-aliyundrive-fuse
        cp -r kenzok8-new/aliyundrive-fuse mypkg/pkg/multimedia
        cp -r kenzok8-new/luci-app-aliyundrive-fuse mypkg/luci/applications
        rm -rf mypkg/pkg/multimedia/aliyundrive-webdav
        rm -rf mypkg/luci/applications/luci-app-aliyundrive-webdav
        cp -r kenzok8/aliyundrive-webdav mypkg/pkg/multimedia
        cp -r kenzok8/luci-app-aliyundrive-webdav mypkg/luci/applications
        
        rm -rf mypkg/luci/applications/luci-app-xlnetacc
              
        cp -r kenzok8-new/luci-app-xlnetacc mypkg/luci/applications
        cp -r kenzok8/luci-app-adguardhome mypkg/luci/applications
        #cp -r kenzok8/luci-app-aliddns mypkg/luci/applications
        cp -r kenzok8/luci-theme-atmaterial_new mypkg/luci/themes
        cp -r kenzok8/luci-theme-neobird mypkg/luci/themes
        cp -r kenzok8/luci-theme-tomato mypkg/luci/themes
        
        #sed -i '/files\/adguardhome.*/d' mypkg/pkg/net/adguardhome/Makefile
        #sed -i '/$(INSTALL_DIR) $(1)\/etc/d' mypkg/pkg/net/adguardhome/Makefile
        patch -p1 < patches/lean/adguardhome.patch
        
        echo -e '\nmsgid "Local DNS Lists"' >> mypkg/luci/applications/luci-app-mosdns/po/zh-cn/mosdns.po
        echo 'msgstr "国内解析"' >> mypkg/luci/applications/luci-app-mosdns/po/zh-cn/mosdns.po
        echo -e '\nmsgid "Forced to use domestic dns resolution"' >> mypkg/luci/applications/luci-app-mosdns/po/zh-cn/mosdns.po
        echo 'msgstr "强制用国内dns解析"' >> mypkg/luci/applications/luci-app-mosdns/po/zh-cn/mosdns.po
        sed -i '/local white_list_file/ilocal localdns_list_file = "/etc/mosdns/rule/localdns.txt"' mypkg/luci/applications/luci-app-mosdns/luasrc/model/cbi/mosdns/rule_list.lua
        sed -i -e '/s\:tab/{is:tab("localdns_list", translate("Local DNS Lists"))' -e ':a;n;ba}' mypkg/luci/applications/luci-app-mosdns/luasrc/model/cbi/mosdns/rule_list.lua
        sed -i -e '/s\:taboption/{io = s:taboption("localdns_list", TextValue, "localdnslist", "", "<font color='red'>" .. translate("Forced to use domestic dns resolution") .. "</font>")\no.rows = 15\no.wrap = "off"\no.cfgvalue = function(self, section) return nixio.fs.readfile(localdns_list_file) or "" end\no.write = function(self, section, value) nixio.fs.writefile(localdns_list_file, value:gsub("\\r\\n", "\\n")) end\no.remove = function(self, section, value) nixio.fs.writefile(localdns_list_file, "") end\no.validate = function(self, value)\n    return value\nend\n' -e ':a;n;ba}' mypkg/luci/applications/luci-app-mosdns/luasrc/model/cbi/mosdns/rule_list.lua
        touch mypkg/luci/applications/luci-app-mosdns/root/etc/mosdns/rule/localdns.txt
        cp -f cfgs/mosdns/cus_config.yaml mypkg/luci/applications/luci-app-mosdns/root/etc/mosdns
        cp -f cfgs/smartdns/custom.conf mypkg/pkg/net/smartdns/conf
        cp -f cfgs/smartdns/smartdns.conf mypkg/pkg/net/smartdns/conf
        #https://github.com/destan19/OpenAppFilter
        sed -i '/.*PKG_VERSION:=*/c\PKG_VERSION:=$(curl -s "http://router.uu.163.com/api/plugin?type=openwrt-x86_64" | jq .url | grep -o "v3[^/]*" | head -n 1)' mypkg/pkg/net/uugamebooster/Makefile

    - name: Push my packages
      uses: JamesIves/github-pages-deploy-action@v4.4.1
      with:
        branch: packages_lean
        folder: mypkg/pkg
        commit-message: "Build: ${{ env.DATE }}({sha})"
        clean: true
    - name: Push my packages
      uses: JamesIves/github-pages-deploy-action@v4.4.1
      with:
        branch: luci_lean
        folder: mypkg/luci
        commit-message: "Build: ${{ env.DATE }}({sha})"
        clean: true

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3
